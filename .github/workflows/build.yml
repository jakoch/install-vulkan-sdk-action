name: "ðŸš€ Build and Test"

on:
  # You can manually run this workflow.
  workflow_dispatch:
  # Run the workflow on Pull Requests.
  pull_request:
  # Run the worflow for changes to main and release branch.
  push:
    branches:
      - main
      - 'releases/*'

jobs:

# ---------------------------------------------------------------------------------------

  build: # makes sure the build/ci works properly (action development)

# ---------------------------------------------------------------------------------------

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4 # https://github.com/actions/checkout

      - run: |
          npm install

      - run: |
          npm run all

# ---------------------------------------------------------------------------------------

  test-latest-version: # makes sure the action works on a clean machine without building (user case)

# ---------------------------------------------------------------------------------------

    # install latest version sdk on all platforms
    name: Install latest - ${{ matrix.config.OS }}
    runs-on: ${{ matrix.config.OS }}

    strategy:
      fail-fast: false
      matrix:
        config:
          # https://github.com/actions/runner-images/tree/main/images
          - { OS: windows-2025 }
          - { OS: ubuntu-24.04 }
          #- { OS: ubuntu-24.04-arm } disabled, because downloads not ready yet
          - { OS: macos-15     }
          #- { OS: macos-15-arm }

    steps:

      - name: ðŸ¤˜ Checkout Code
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      - name: Use own action - test latest version
        uses: ./
        with:
          # Vulkan SDK version to download. Default: latest version.
          vulkan_version: latest
          optional_components: com.lunarg.vulkan.vma, com.lunarg.vulkan.volk
          install_runtime: true
          cache: true
          stripdown: true

      - name: Show Env Vars and SDK folder (Linux)
        if: contains(matrix.config.OS, 'ubuntu')
        run: |
          echo PATH = $PATH
          echo VULKAN_VERSION = $VULKAN_VERSION
          echo VULKAN_SDK = $VULKAN_SDK
          echo VK_LAYER_PATH = $VK_LAYER_PATH
          echo LD_LIBRARY_PATH = $LD_LIBRARY_PATH
          echo Folder size = `du -hs $VULKAN_SDK`

      - name: Show Env Vars and SDK folder (Windows)
        if: contains(matrix.config.OS, 'windows')
        working-directory: ${{env.VULKAN_SDK}}
        run: |
          echo $env:PATH
          echo $env:VULKAN_VERSION
          echo $env:VULKAN_SDK
          Get-ChildItem -File -Recurse
          $folderSizeMB = (Get-ChildItem -File -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
          "Folder size: {0:N2} MB" -f $folderSizeMB

      - name: Show Env Vars and SDK folder (MAC)
        if: contains(matrix.config.OS, 'mac')
        run: |
          echo PATH = $PATH
          echo VULKAN_VERSION = $VULKAN_VERSION
          echo VULKAN_SDK = $VULKAN_SDK
          echo VK_LAYER_PATH = $VK_LAYER_PATH
          echo DYLD_LIBRARY_PATH = $DYLD_LIBRARY_PATH
          echo Folder size = `du -hs $VULKAN_SDK`

# ---------------------------------------------------------------------------------------

  test-old-version: # makes sure the action works on a clean machine without building (user case)

# ---------------------------------------------------------------------------------------

    # install old version sdk on all platforms
    name: Install old - ${{ matrix.config.OS }}
    runs-on: ${{ matrix.config.OS }}

    strategy:
      fail-fast: false
      matrix:
        config:
          # https://github.com/actions/runner-images/tree/main/images
          - { OS: windows-2025 }
          - { OS: ubuntu-24.04 }
          #- { OS: ubuntu-24.04-arm } disabled, because downloads not ready yet
          - { OS: macos-15     }
          #- { OS: macos-15-arm }

    steps:

      - name: ðŸ¤˜ Checkout Code
        uses: actions/checkout@v4 # https://github.com/actions/checkout

      #- name: Use own action - test wrong version number
      #  uses: ./
      #  with:
      #    # Vulkan SDK version to download. Default: latest version.
      #    # test with intentionally wrong version
      #    # should say version not available
      #    # should print list of valid versions
      #    vulkan_version: 1.2.3.4

      - name: Use own action - from 1.3.261.1 archive is tar.xz on linux
        uses: ./
        with:
          # Vulkan SDK version to download. Default: latest version.
          vulkan_version:  1.3.261.1
          optional_components: com.lunarg.vulkan.vma, com.lunarg.vulkan.volk
          install_runtime: true
          cache: true
          stripdown: true

      #- name: Use own action - up to 1.3.250.1 archive is tar.gz on linux
      #  uses: ./
      #  with:
      #    # Vulkan SDK version to download. Default: latest version.
      #    vulkan_version: 1.3.250.1
      #    optional_components: com.lunarg.vulkan.vma, com.lunarg.vulkan.volk
      #    install_runtime: true
      #    cache: true
      #    stripdown: true

      - name: Show Env Vars and SDK folder (Linux)
        if: contains(matrix.config.OS, 'ubuntu')
        run: |
          echo PATH = $PATH
          echo VULKAN_VERSION = $VULKAN_VERSION
          echo VULKAN_SDK = $VULKAN_SDK
          echo VK_LAYER_PATH = $VK_LAYER_PATH
          echo LD_LIBRARY_PATH = $LD_LIBRARY_PATH
          echo Folder size = `du -hs $VULKAN_SDK`

      - name: Show Env Vars and SDK folder (Windows)
        if: contains(matrix.config.OS, 'windows')
        working-directory: ${{env.VULKAN_SDK}}
        run: |
          echo $env:PATH
          echo $env:VULKAN_VERSION
          echo $env:VULKAN_SDK
          Get-ChildItem -File -Recurse
          $folderSizeMB = (Get-ChildItem -File -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
          "Folder size: {0:N2} MB" -f $folderSizeMB

      - name: Show Env Vars and SDK folder (MAC)
        if: contains(matrix.config.OS, 'mac')
        run: |
          echo PATH = $PATH
          echo VULKAN_VERSION = $VULKAN_VERSION
          echo VULKAN_SDK = $VULKAN_SDK
          echo VK_LAYER_PATH = $VK_LAYER_PATH
          echo DYLD_LIBRARY_PATH = $DYLD_LIBRARY_PATH
          echo Folder size = `du -hs $VULKAN_SDK`
